

*,
*::before,
*::after{
    box-sizing: border-box;
}
.containercard{
    align-items: center;
    display: flex;
    flex-wrap: wrap;
    margin:  auto;
    margin: 20px 90px;
    width: 100%;

}
.card{
    justify-content: space-evenly;
    margin: 10px 10px;
    color: var(--clr-neutral-100);
    background-size: cover;
    padding: 2rem 0 0;
    max-width: 30ch;
    border-radius: 0.5rem;
    overflow: hidden;
    transition: transform 500ms ease;
    box-shadow: 5px 5px 10px rgba(100, 100, 100, 0.8);
}

@media screen and( max-width:720px){
    .container{
        flex-direction: column;
    }
}
.card:hover,
.card:focus-within{
    transform: scale(1.05);
}

.card-content{
    
    --padding:1.5rem;
    padding: var(--padding);
    background: linear-gradient(
        hsl(0 0% 0% / 0),
        hsl(0 0% 0% / 0.3) 20%,
        hsl(0 0% 0% / 0.8)
    );
}

.card-titu{
    position: relative;
    width: max-content;
}

.card-titu::after{
    content: "";
    position: absolute;
    height: 3px;
    left: calc(var(--padding) * -5);
    bottom: -2px;
    width: calc(1000% + var(--padding));
    background: var(--clr-neutral-400);
    transform-origin: left;
    transition: transform 600ms ease;
}

.card:hover .card-titu::after,
.card:focus-within .card-titu::after{
    transform: scaleX(1);
}

.card-body{
    color: rgb(255 255 255 /0.85);
}

@media(hover){
    .card-content{
    transform: translateY(65%);
    transition: transform 500ms ease;
    }

    .card:hover .card-content,
    .card:focus-within .card-content{
        transform: translateY(0);
        transition-delay: 300ms;
        
    }

    .card:focus-within .card-content{
        transition-duration:0ms;
    }

    .card-content > *:not(.card-titu){
        opacity: 0;
        transition: opacity 500ms linear;
    }

    .card:hover .card-content{
        transform: translateY(0); 

    }

    .card:hover .card-content > *:not(.card-titu),
    .card:focus-within .card-content > *:not(.card-titu){
        opacity: 1;
        transition-delay: 700ms;
    }

    .card-titu::after{
        transform: scaleX(0);
    }

}

.button{
    cursor: pointer;
    display: inline-block;
    text-decoration: none;
    color: var(--clr-neutral-900);
    background-color: var(--clr-neutral-400);
    padding: 0.5em 1.25em;
    border-radius: 5px;
}

.button:hover,
.button:focus{
    background-color: var(--clr-neutral-100);
}
